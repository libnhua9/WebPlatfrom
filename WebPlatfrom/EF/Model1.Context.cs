//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DocomPlatformEntities : DbContext
    {
        public DocomPlatformEntities()
            : base("name=DocomPlatformEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tb_Ad> Tb_Ad { get; set; }
        public virtual DbSet<Tb_API_User> Tb_API_User { get; set; }
        public virtual DbSet<Tb_APIFunction> Tb_APIFunction { get; set; }
        public virtual DbSet<TB_Config> TB_Config { get; set; }
        public virtual DbSet<Tb_Device_DVR> Tb_Device_DVR { get; set; }
        public virtual DbSet<Tb_Device_eSensor> Tb_Device_eSensor { get; set; }
        public virtual DbSet<Tb_Device_LcdAd> Tb_Device_LcdAd { get; set; }
        public virtual DbSet<Tb_Device_LED> Tb_Device_LED { get; set; }
        public virtual DbSet<Tb_Device_M4Channel> Tb_Device_M4Channel { get; set; }
        public virtual DbSet<Tb_Device_Parking> Tb_Device_Parking { get; set; }
        public virtual DbSet<Tb_Device_ParkStore> Tb_Device_ParkStore { get; set; }
        public virtual DbSet<Tb_Device_SelfCabinet> Tb_Device_SelfCabinet { get; set; }
        public virtual DbSet<Tb_Device_Ticket> Tb_Device_Ticket { get; set; }
        public virtual DbSet<Tb_Device_TVM> Tb_Device_TVM { get; set; }
        public virtual DbSet<Tb_DevsInfo> Tb_DevsInfo { get; set; }
        public virtual DbSet<Tb_EventType> Tb_EventType { get; set; }
        public virtual DbSet<Tb_Face_Feature> Tb_Face_Feature { get; set; }
        public virtual DbSet<Tb_Face_Group> Tb_Face_Group { get; set; }
        public virtual DbSet<Tb_Face_Image> Tb_Face_Image { get; set; }
        public virtual DbSet<Tb_LcdAd_Plan> Tb_LcdAd_Plan { get; set; }
        public virtual DbSet<Tb_LedAd> Tb_LedAd { get; set; }
        public virtual DbSet<Tb_Logs_DocomPay> Tb_Logs_DocomPay { get; set; }
        public virtual DbSet<Tb_Logs_eSensor> Tb_Logs_eSensor { get; set; }
        public virtual DbSet<Tb_Logs_FaceAPI> Tb_Logs_FaceAPI { get; set; }
        public virtual DbSet<Tb_Logs_LedCall> Tb_Logs_LedCall { get; set; }
        public virtual DbSet<Tb_Logs_M4Channel> Tb_Logs_M4Channel { get; set; }
        public virtual DbSet<Tb_Logs_Parking> Tb_Logs_Parking { get; set; }
        public virtual DbSet<Tb_Logs_ParkStore> Tb_Logs_ParkStore { get; set; }
        public virtual DbSet<Tb_Logs_SelfCabinet> Tb_Logs_SelfCabinet { get; set; }
        public virtual DbSet<Tb_Logs_Ticket> Tb_Logs_Ticket { get; set; }
        public virtual DbSet<Tb_Logs_TTS> Tb_Logs_TTS { get; set; }
        public virtual DbSet<Tb_Logs_TVM> Tb_Logs_TVM { get; set; }
        public virtual DbSet<Tb_RecordFile> Tb_RecordFile { get; set; }
        public virtual DbSet<Tb_Status_DVR> Tb_Status_DVR { get; set; }
        public virtual DbSet<Tb_Status_eSensor> Tb_Status_eSensor { get; set; }
        public virtual DbSet<Tb_Status_Led> Tb_Status_Led { get; set; }
        public virtual DbSet<Tb_Status_M4Channel> Tb_Status_M4Channel { get; set; }
        public virtual DbSet<Tb_Status_ParkStore> Tb_Status_ParkStore { get; set; }
        public virtual DbSet<Tb_Status_SelfCabinet> Tb_Status_SelfCabinet { get; set; }
        public virtual DbSet<Tb_Status_Ticket> Tb_Status_Ticket { get; set; }
        public virtual DbSet<Tb_Status_TVM> Tb_Status_TVM { get; set; }
        public virtual DbSet<Tb_UI_Ticket> Tb_UI_Ticket { get; set; }
        public virtual DbSet<Tb_User_Notify> Tb_User_Notify { get; set; }
        public virtual DbSet<Tb_User_Ticket_Ad> Tb_User_Ticket_Ad { get; set; }
        public virtual DbSet<Tb_Users> Tb_Users { get; set; }
        public virtual DbSet<Tb_Users_DVR> Tb_Users_DVR { get; set; }
        public virtual DbSet<Tb_Users_eSensor> Tb_Users_eSensor { get; set; }
        public virtual DbSet<Tb_Users_LcdAd> Tb_Users_LcdAd { get; set; }
        public virtual DbSet<Tb_Users_LED> Tb_Users_LED { get; set; }
        public virtual DbSet<Tb_Users_LedAd> Tb_Users_LedAd { get; set; }
        public virtual DbSet<Tb_Users_M4Channel> Tb_Users_M4Channel { get; set; }
        public virtual DbSet<Tb_Users_Parking> Tb_Users_Parking { get; set; }
        public virtual DbSet<Tb_Users_ParkStore> Tb_Users_ParkStore { get; set; }
        public virtual DbSet<Tb_Users_SelfCabinet> Tb_Users_SelfCabinet { get; set; }
        public virtual DbSet<Tb_Users_Subsystem> Tb_Users_Subsystem { get; set; }
        public virtual DbSet<Tb_Users_Ticket> Tb_Users_Ticket { get; set; }
        public virtual DbSet<Tb_Users_TVM> Tb_Users_TVM { get; set; }
        public virtual DbSet<V_Device_Logs_eSensor> V_Device_Logs_eSensor { get; set; }
        public virtual DbSet<V_Device_Logs_eSensor_User> V_Device_Logs_eSensor_User { get; set; }
        public virtual DbSet<V_Device_Logs_M4Channel> V_Device_Logs_M4Channel { get; set; }
        public virtual DbSet<V_Device_Logs_M4Channel_User> V_Device_Logs_M4Channel_User { get; set; }
        public virtual DbSet<V_Device_Logs_Parking> V_Device_Logs_Parking { get; set; }
        public virtual DbSet<V_Device_Logs_Parking_User> V_Device_Logs_Parking_User { get; set; }
        public virtual DbSet<V_Device_Logs_ParkStore> V_Device_Logs_ParkStore { get; set; }
        public virtual DbSet<V_Device_Logs_ParkStore_User> V_Device_Logs_ParkStore_User { get; set; }
        public virtual DbSet<V_Device_Logs_SelfCabinet> V_Device_Logs_SelfCabinet { get; set; }
        public virtual DbSet<V_Device_Logs_SelfCabinet_User> V_Device_Logs_SelfCabinet_User { get; set; }
        public virtual DbSet<V_Device_Logs_Ticket> V_Device_Logs_Ticket { get; set; }
        public virtual DbSet<V_Device_Logs_Ticket_User> V_Device_Logs_Ticket_User { get; set; }
        public virtual DbSet<V_Device_Logs_TVM> V_Device_Logs_TVM { get; set; }
        public virtual DbSet<V_Device_Logs_TVM_User> V_Device_Logs_TVM_User { get; set; }
        public virtual DbSet<V_FP_DVR> V_FP_DVR { get; set; }
        public virtual DbSet<V_FP_eSensor> V_FP_eSensor { get; set; }
        public virtual DbSet<V_FP_FaceFeature> V_FP_FaceFeature { get; set; }
        public virtual DbSet<V_FP_LED> V_FP_LED { get; set; }
        public virtual DbSet<V_FP_Logs_M4Channel> V_FP_Logs_M4Channel { get; set; }
        public virtual DbSet<V_FP_Logs_ParkStore> V_FP_Logs_ParkStore { get; set; }
        public virtual DbSet<V_FP_Logs_SelfCabinet> V_FP_Logs_SelfCabinet { get; set; }
        public virtual DbSet<V_FP_Logs_Ticket> V_FP_Logs_Ticket { get; set; }
        public virtual DbSet<V_FP_Logs_TVM> V_FP_Logs_TVM { get; set; }
        public virtual DbSet<V_FP_Notify_List> V_FP_Notify_List { get; set; }
        public virtual DbSet<V_FP_Parking> V_FP_Parking { get; set; }
        public virtual DbSet<V_FP_ParkStore> V_FP_ParkStore { get; set; }
        public virtual DbSet<V_FP_SelfCabinet> V_FP_SelfCabinet { get; set; }
        public virtual DbSet<V_FP_Sensor> V_FP_Sensor { get; set; }
        public virtual DbSet<V_FP_SensorLog> V_FP_SensorLog { get; set; }
        public virtual DbSet<V_FP_Status_DVR> V_FP_Status_DVR { get; set; }
        public virtual DbSet<V_FP_Status_DVRNull> V_FP_Status_DVRNull { get; set; }
        public virtual DbSet<V_FP_Status_eSensorNull> V_FP_Status_eSensorNull { get; set; }
        public virtual DbSet<V_FP_Status_LED> V_FP_Status_LED { get; set; }
        public virtual DbSet<V_FP_Status_LEDNull> V_FP_Status_LEDNull { get; set; }
        public virtual DbSet<V_FP_Status_M4Channel> V_FP_Status_M4Channel { get; set; }
        public virtual DbSet<V_FP_Status_M4ChannelNull> V_FP_Status_M4ChannelNull { get; set; }
        public virtual DbSet<V_FP_Status_ParkStore> V_FP_Status_ParkStore { get; set; }
        public virtual DbSet<V_FP_Status_ParkStoreNull> V_FP_Status_ParkStoreNull { get; set; }
        public virtual DbSet<V_FP_Status_SelfCabinet> V_FP_Status_SelfCabinet { get; set; }
        public virtual DbSet<V_FP_Status_SelfCabinetNull> V_FP_Status_SelfCabinetNull { get; set; }
        public virtual DbSet<V_FP_Status_Ticket> V_FP_Status_Ticket { get; set; }
        public virtual DbSet<V_FP_Status_TicketNull> V_FP_Status_TicketNull { get; set; }
        public virtual DbSet<V_FP_Status_TVM> V_FP_Status_TVM { get; set; }
        public virtual DbSet<V_FP_Status_TVMNull> V_FP_Status_TVMNull { get; set; }
        public virtual DbSet<V_FP_Ticket> V_FP_Ticket { get; set; }
        public virtual DbSet<V_FP_TicketUI> V_FP_TicketUI { get; set; }
        public virtual DbSet<V_LcdAd> V_LcdAd { get; set; }
        public virtual DbSet<V_Logs_API> V_Logs_API { get; set; }
        public virtual DbSet<V_Logs_DocomPay> V_Logs_DocomPay { get; set; }
        public virtual DbSet<V_Logs_DocomPay_User> V_Logs_DocomPay_User { get; set; }
        public virtual DbSet<V_Logs_FaceAPI> V_Logs_FaceAPI { get; set; }
        public virtual DbSet<V_Logs_FaceAPI_User> V_Logs_FaceAPI_User { get; set; }
        public virtual DbSet<V_Logs_M4Channel> V_Logs_M4Channel { get; set; }
        public virtual DbSet<V_Logs_ParkStore> V_Logs_ParkStore { get; set; }
        public virtual DbSet<V_Logs_PayAPI> V_Logs_PayAPI { get; set; }
        public virtual DbSet<V_Logs_SelfCabinet> V_Logs_SelfCabinet { get; set; }
        public virtual DbSet<V_Logs_Ticket> V_Logs_Ticket { get; set; }
        public virtual DbSet<V_Logs_Tts> V_Logs_Tts { get; set; }
        public virtual DbSet<V_Logs_Tts_User> V_Logs_Tts_User { get; set; }
        public virtual DbSet<V_Logs_TVM> V_Logs_TVM { get; set; }
        public virtual DbSet<V_M4Chanel_FP> V_M4Chanel_FP { get; set; }
        public virtual DbSet<V_Status_DVR> V_Status_DVR { get; set; }
        public virtual DbSet<V_Status_DVRNull> V_Status_DVRNull { get; set; }
        public virtual DbSet<V_Status_eSensorNull> V_Status_eSensorNull { get; set; }
        public virtual DbSet<V_Status_LED> V_Status_LED { get; set; }
        public virtual DbSet<V_Status_LEDNull> V_Status_LEDNull { get; set; }
        public virtual DbSet<V_Status_M4Channel> V_Status_M4Channel { get; set; }
        public virtual DbSet<V_Status_M4ChannelNull> V_Status_M4ChannelNull { get; set; }
        public virtual DbSet<V_Status_ParkStore> V_Status_ParkStore { get; set; }
        public virtual DbSet<V_Status_ParkStoreNull> V_Status_ParkStoreNull { get; set; }
        public virtual DbSet<V_Status_SelfCabinet> V_Status_SelfCabinet { get; set; }
        public virtual DbSet<V_Status_SelfCabinetNull> V_Status_SelfCabinetNull { get; set; }
        public virtual DbSet<V_Status_Ticket> V_Status_Ticket { get; set; }
        public virtual DbSet<V_Status_TicketNull> V_Status_TicketNull { get; set; }
        public virtual DbSet<V_Status_TVM> V_Status_TVM { get; set; }
        public virtual DbSet<V_Status_TVMNull> V_Status_TVMNull { get; set; }
        public virtual DbSet<V_SubscriptionEvet_User> V_SubscriptionEvet_User { get; set; }
        public virtual DbSet<V_Test> V_Test { get; set; }
        public virtual DbSet<V_Test_Temp> V_Test_Temp { get; set; }
        public virtual DbSet<V_TVM_FP> V_TVM_FP { get; set; }
        public virtual DbSet<V_User_APIFunction> V_User_APIFunction { get; set; }
    
        public virtual int Face_SaveFeature(Nullable<int> userID, Nullable<int> groupID, Nullable<int> featureID, string featureName, string featureNumber, string remarks, string featureData, string img)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            var featureIDParameter = featureID.HasValue ?
                new ObjectParameter("featureID", featureID) :
                new ObjectParameter("featureID", typeof(int));
    
            var featureNameParameter = featureName != null ?
                new ObjectParameter("featureName", featureName) :
                new ObjectParameter("featureName", typeof(string));
    
            var featureNumberParameter = featureNumber != null ?
                new ObjectParameter("featureNumber", featureNumber) :
                new ObjectParameter("featureNumber", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var featureDataParameter = featureData != null ?
                new ObjectParameter("featureData", featureData) :
                new ObjectParameter("featureData", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Face_SaveFeature", userIDParameter, groupIDParameter, featureIDParameter, featureNameParameter, featureNumberParameter, remarksParameter, featureDataParameter, imgParameter);
        }
    
        public virtual ObjectResult<P_Logs_DocomPay_Report_Result> P_Logs_DocomPay_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_DocomPay_Report_Result>("P_Logs_DocomPay_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_eSensor_Report_Result> P_Logs_eSensor_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_eSensor_Report_Result>("P_Logs_eSensor_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_FaceAPI_Report_Result> P_Logs_FaceAPI_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_FaceAPI_Report_Result>("P_Logs_FaceAPI_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_LED_Report_Result> P_Logs_LED_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_LED_Report_Result>("P_Logs_LED_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_M4Channel_Report_Result> P_Logs_M4Channel_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_M4Channel_Report_Result>("P_Logs_M4Channel_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_Parking_Report_Result> P_Logs_Parking_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_Parking_Report_Result>("P_Logs_Parking_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_ParkStore_Report_Result> P_Logs_ParkStore_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_ParkStore_Report_Result>("P_Logs_ParkStore_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_SelfCabinet_Report_Result> P_Logs_SelfCabinet_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_SelfCabinet_Report_Result>("P_Logs_SelfCabinet_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_Ticket_Report_Result> P_Logs_Ticket_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_Ticket_Report_Result>("P_Logs_Ticket_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual ObjectResult<P_Logs_Tts_Report_Result> P_Logs_Tts_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level, Nullable<int> apiID)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var apiIDParameter = apiID.HasValue ?
                new ObjectParameter("ApiID", apiID) :
                new ObjectParameter("ApiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_Tts_Report_Result>("P_Logs_Tts_Report", typeParameter, userIDParameter, levelParameter, apiIDParameter);
        }
    
        public virtual ObjectResult<P_Logs_TVM_Report_Result> P_Logs_TVM_Report(Nullable<int> type, Nullable<int> userID, Nullable<int> level)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_Logs_TVM_Report_Result>("P_Logs_TVM_Report", typeParameter, userIDParameter, levelParameter);
        }
    
        public virtual int Pager(string strTable, string strField, Nullable<int> pageSize, Nullable<int> pageIndex, string strWhere, string strSortKey, string strSortField, Nullable<bool> strOrderBy, ObjectParameter recordCount, ObjectParameter usedTime)
        {
            var strTableParameter = strTable != null ?
                new ObjectParameter("strTable", strTable) :
                new ObjectParameter("strTable", typeof(string));
    
            var strFieldParameter = strField != null ?
                new ObjectParameter("strField", strField) :
                new ObjectParameter("strField", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var strWhereParameter = strWhere != null ?
                new ObjectParameter("strWhere", strWhere) :
                new ObjectParameter("strWhere", typeof(string));
    
            var strSortKeyParameter = strSortKey != null ?
                new ObjectParameter("strSortKey", strSortKey) :
                new ObjectParameter("strSortKey", typeof(string));
    
            var strSortFieldParameter = strSortField != null ?
                new ObjectParameter("strSortField", strSortField) :
                new ObjectParameter("strSortField", typeof(string));
    
            var strOrderByParameter = strOrderBy.HasValue ?
                new ObjectParameter("strOrderBy", strOrderBy) :
                new ObjectParameter("strOrderBy", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Pager", strTableParameter, strFieldParameter, pageSizeParameter, pageIndexParameter, strWhereParameter, strSortKeyParameter, strSortFieldParameter, strOrderByParameter, recordCount, usedTime);
        }
    
        public virtual int SaveStatus_eSensor(string ip, string mac, Nullable<int> state)
        {
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var macParameter = mac != null ?
                new ObjectParameter("mac", mac) :
                new ObjectParameter("mac", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveStatus_eSensor", ipParameter, macParameter, stateParameter);
        }
    
        public virtual int SaveStatus_M4Channel(string deviceSN, Nullable<System.DateTime> lastUpdate, string ipAddress, Nullable<int> workMode, Nullable<int> totalCount)
        {
            var deviceSNParameter = deviceSN != null ?
                new ObjectParameter("deviceSN", deviceSN) :
                new ObjectParameter("deviceSN", typeof(string));
    
            var lastUpdateParameter = lastUpdate.HasValue ?
                new ObjectParameter("lastUpdate", lastUpdate) :
                new ObjectParameter("lastUpdate", typeof(System.DateTime));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("ipAddress", ipAddress) :
                new ObjectParameter("ipAddress", typeof(string));
    
            var workModeParameter = workMode.HasValue ?
                new ObjectParameter("workMode", workMode) :
                new ObjectParameter("workMode", typeof(int));
    
            var totalCountParameter = totalCount.HasValue ?
                new ObjectParameter("totalCount", totalCount) :
                new ObjectParameter("totalCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveStatus_M4Channel", deviceSNParameter, lastUpdateParameter, ipAddressParameter, workModeParameter, totalCountParameter);
        }
    
        public virtual int SaveStatus_ParkStore(string deviceSN, Nullable<System.DateTime> updateTime, string ipAddress, string status)
        {
            var deviceSNParameter = deviceSN != null ?
                new ObjectParameter("deviceSN", deviceSN) :
                new ObjectParameter("deviceSN", typeof(string));
    
            var updateTimeParameter = updateTime.HasValue ?
                new ObjectParameter("updateTime", updateTime) :
                new ObjectParameter("updateTime", typeof(System.DateTime));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("ipAddress", ipAddress) :
                new ObjectParameter("ipAddress", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveStatus_ParkStore", deviceSNParameter, updateTimeParameter, ipAddressParameter, statusParameter);
        }
    
        public virtual int SaveStatus_SelfCabinet(string sn, string ip, string status, string config)
        {
            var snParameter = sn != null ?
                new ObjectParameter("sn", sn) :
                new ObjectParameter("sn", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var configParameter = config != null ?
                new ObjectParameter("config", config) :
                new ObjectParameter("config", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveStatus_SelfCabinet", snParameter, ipParameter, statusParameter, configParameter);
        }
    
        public virtual int SaveStatus_Ticket(string deviceSN, Nullable<int> channelMode, string ipAddress, Nullable<int> passCount, Nullable<int> checkCount, Nullable<System.DateTime> startUP, Nullable<int> systemType, Nullable<System.DateTime> updateDate)
        {
            var deviceSNParameter = deviceSN != null ?
                new ObjectParameter("deviceSN", deviceSN) :
                new ObjectParameter("deviceSN", typeof(string));
    
            var channelModeParameter = channelMode.HasValue ?
                new ObjectParameter("channelMode", channelMode) :
                new ObjectParameter("channelMode", typeof(int));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("ipAddress", ipAddress) :
                new ObjectParameter("ipAddress", typeof(string));
    
            var passCountParameter = passCount.HasValue ?
                new ObjectParameter("passCount", passCount) :
                new ObjectParameter("passCount", typeof(int));
    
            var checkCountParameter = checkCount.HasValue ?
                new ObjectParameter("checkCount", checkCount) :
                new ObjectParameter("checkCount", typeof(int));
    
            var startUPParameter = startUP.HasValue ?
                new ObjectParameter("startUP", startUP) :
                new ObjectParameter("startUP", typeof(System.DateTime));
    
            var systemTypeParameter = systemType.HasValue ?
                new ObjectParameter("systemType", systemType) :
                new ObjectParameter("systemType", typeof(int));
    
            var updateDateParameter = updateDate.HasValue ?
                new ObjectParameter("updateDate", updateDate) :
                new ObjectParameter("updateDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveStatus_Ticket", deviceSNParameter, channelModeParameter, ipAddressParameter, passCountParameter, checkCountParameter, startUPParameter, systemTypeParameter, updateDateParameter);
        }
    
        public virtual int SaveStatus_TVM(string deviceSN, Nullable<System.DateTime> lastUpdate, string ipAddress)
        {
            var deviceSNParameter = deviceSN != null ?
                new ObjectParameter("deviceSN", deviceSN) :
                new ObjectParameter("deviceSN", typeof(string));
    
            var lastUpdateParameter = lastUpdate.HasValue ?
                new ObjectParameter("lastUpdate", lastUpdate) :
                new ObjectParameter("lastUpdate", typeof(System.DateTime));
    
            var ipAddressParameter = ipAddress != null ?
                new ObjectParameter("ipAddress", ipAddress) :
                new ObjectParameter("ipAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveStatus_TVM", deviceSNParameter, lastUpdateParameter, ipAddressParameter);
        }
    
        public virtual int SaveSubsystemConfig(Nullable<int> userID, Nullable<int> subSystemID, string subName, string remarks, string api_Url, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> enabled)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var subSystemIDParameter = subSystemID.HasValue ?
                new ObjectParameter("subSystemID", subSystemID) :
                new ObjectParameter("subSystemID", typeof(int));
    
            var subNameParameter = subName != null ?
                new ObjectParameter("subName", subName) :
                new ObjectParameter("subName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var api_UrlParameter = api_Url != null ?
                new ObjectParameter("api_Url", api_Url) :
                new ObjectParameter("api_Url", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("enabled", enabled) :
                new ObjectParameter("enabled", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveSubsystemConfig", userIDParameter, subSystemIDParameter, subNameParameter, remarksParameter, api_UrlParameter, startDateParameter, endDateParameter, enabledParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_DeleteFaceFeature(Nullable<int> faceID, Nullable<int> userID, Nullable<int> groupID)
        {
            var faceIDParameter = faceID.HasValue ?
                new ObjectParameter("faceID", faceID) :
                new ObjectParameter("faceID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteFaceFeature", faceIDParameter, userIDParameter, groupIDParameter);
        }
    
        public virtual int sp_DeleteFaceGroup(Nullable<int> userID, Nullable<int> groupID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("groupID", groupID) :
                new ObjectParameter("groupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteFaceGroup", userIDParameter, groupIDParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
